{"version":3,"sources":["components/Weather.js","pages/Forecast.js","App.js","serviceWorker.js","index.js"],"names":["Weather","props","onSubmit","getWeather","type","name","placeholder","city","country","iconId","flip","rotate","description","temperature","humidity","error","className","to","Test","day1","iconId1","description1","temperature1","humidity1","day2","iconId2","description2","temperature2","humidity2","day3","iconId3","description3","temperature3","humidity3","day4","iconId4","description4","temperature4","humidity4","API_KEY","App","state","undefined","icon","e","a","preventDefault","target","elements","value","fetch","api_call","json","data","forecast_api_call","data_forecast","console","log","list","main","temp","weather","setState","sys","id","toString","dt_txt","exact","path","render","Forecast","React","Component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9e97c9d4.chunk.js","sourcesContent":["import React from 'react';\r\nimport WeatherIcon from 'react-icons-weather';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Weather = props => (\r\n    <div>\r\n        <h1>Weather App</h1>\r\n        <p>Discover temperature, conditions and more...</p>\r\n\r\n        <form onSubmit={props.getWeather}>\r\n            <input type=\"text\" name=\"city\" placeholder=\"City...\"></input>\r\n            <button>Get Weather</button>\r\n        </form>\r\n\r\n        <div>\r\n            { props.city && <p><b>Location: </b>{ props.city }, { props.country }</p> }\r\n            { props.iconId && <WeatherIcon name=\"owm\" iconId={ props.iconId } flip=\"horizontal\" rotate=\"90\" /> }\r\n            { props.description && <p><b>Conditions: </b>{ props.description }</p> }\r\n            { props.temperature && <p><b>Temperature: </b>{ props.temperature }</p> }\r\n            { props.humidity && <p><b>Humidity: </b>{ props.humidity }</p> }\r\n            { props.error && <p>{ props.error }</p> }\r\n        </div>\r\n        <nav>\r\n            <ul className=\"nav-links\">\r\n                <Link to=\"/forecast\">\r\n                    <li className=\"li-link\">Get 4 day Forecast</li>\r\n                </Link>\r\n            </ul>\r\n        </nav>\r\n    </div>\r\n);\r\n\r\nexport default Weather;","import React from 'react';\r\nimport WeatherIcon from 'react-icons-weather';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Test = props => (\r\n        <div>\r\n            <div className=\"forecastTitle\">\r\n                { props.city && <p><b>{ props.city }, { props.country }</b></p> }\r\n            </div>\r\n            <div className=\"days\">\r\n                <div className=\"day\">\r\n                    { props.day1 && <p><b>{ props.day1 }</b></p> }\r\n                    { props.iconId1 && <WeatherIcon name=\"owm\" iconId={ props.iconId1 } flip=\"horizontal\" rotate=\"90\" /> }\r\n                    { props.description1 && <p><b>Conditions: </b>{ props.description1 }</p> }\r\n                    { props.temperature1 && <p><b>Temperature: </b>{ props.temperature1 }</p> }\r\n                    { props.humidity1 && <p><b>Humidity: </b>{ props.humidity1 }</p> }\r\n                </div>\r\n                \r\n                <div className=\"day\">\r\n                    { props.day2 && <p><b>{ props.day2 }</b></p> }\r\n                    { props.iconId2 && <WeatherIcon name=\"owm\" iconId={ props.iconId2 } flip=\"horizontal\" rotate=\"90\" /> }\r\n                    { props.description2 && <p><b>Conditions: </b>{ props.description2 }</p> }\r\n                    { props.temperature2 && <p><b>Temperature: </b>{ props.temperature2 }</p> }\r\n                    { props.humidity2 && <p><b>Humidity: </b>{ props.humidity2 }</p> }\r\n                </div>\r\n\r\n                <div className=\"day\">\r\n                    { props.day3 && <p><b>{ props.day3 }</b></p> }\r\n                    { props.iconId3 && <WeatherIcon name=\"owm\" iconId={ props.iconId3 } flip=\"horizontal\" rotate=\"90\" /> }\r\n                    { props.description3 && <p><b>Conditions: </b>{ props.description3 }</p> }\r\n                    { props.temperature3 && <p><b>Temperature: </b>{ props.temperature3 }</p> }\r\n                    { props.humidity3 && <p><b>Humidity: </b>{ props.humidity3 }</p> }\r\n                </div>\r\n\r\n                <div className=\"day\">\r\n                    { props.day4 && <p><b>{ props.day4 }</b></p> }\r\n                    { props.iconId4 && <WeatherIcon name=\"owm\" iconId={ props.iconId4 } flip=\"horizontal\" rotate=\"90\" /> }\r\n                    { props.description4 && <p><b>Conditions: </b>{ props.description4 }</p> }\r\n                    { props.temperature4 && <p><b>Temperature: </b>{ props.temperature4 }</p> }\r\n                    { props.humidity4 && <p><b>Humidity: </b>{ props.humidity4 }</p> }\r\n                </div>\r\n\r\n            </div>\r\n            <nav>\r\n                <ul className=\"nav-links\">\r\n                    <Link to=\"/\">\r\n                        <li className=\"li-link\">Back</li>\r\n                    </Link>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n);\r\n\r\nexport default Test;","import React from 'react';\nimport Weather from './components/Weather';\nimport Forecast from './pages/Forecast';\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n\nconst API_KEY = \"f12c0cd84251b35291a0113a31096a41\";\n\nclass App extends React.Component {\n  state = {\n    temperature: undefined,\n    city: undefined,\n    humidity: undefined,\n    description: undefined,\n    icon: undefined,\n    iconId: undefined,\n    day1: undefined,\n    temperature1: undefined,\n    humidity1: undefined,\n    description1: undefined,\n    iconId1: undefined,\n    day2: undefined,\n    temperature2: undefined,\n    humidity2: undefined,\n    description2: undefined,\n    iconId2: undefined,\n    day3: undefined,\n    temperature3: undefined,\n    humidity3: undefined,\n    description3: undefined,\n    iconId3: undefined,\n    day4: undefined,\n    temperature4: undefined,\n    humidity4: undefined,\n    description4: undefined,\n    iconId4: undefined,\n    error: undefined\n  }\n\n  getWeather = async (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n    const data = await api_call.json();\n    const forecast_api_call = await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=metric`);\n    const data_forecast = await forecast_api_call.json();\n    if (city){\n      console.log(data)\n      console.log(data_forecast)\n      console.log(data_forecast.list[10].main.temp)\n      console.log(data_forecast.list[10].main.humidity)\n      console.log(data_forecast.list[10].weather[0].description)\n      this.setState({\n        temperature: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        humidity: data.main.humidity,\n        description: data.weather[0].description,\n        icon: data.weather[0].icon,\n        iconId: data.weather[0].id.toString(),\n        day1: data_forecast.list[10].dt_txt,\n        temperature1: data_forecast.list[10].main.temp,\n        humidity1: data_forecast.list[10].main.humidity,\n        description1: data_forecast.list[10].weather[0].description,\n        iconId1: data_forecast.list[10].weather[0].id.toString(),\n        day2: data_forecast.list[18].dt_txt,\n        temperature2: data_forecast.list[18].main.temp,\n        humidity2: data_forecast.list[18].main.humidity,\n        description2: data_forecast.list[18].weather[0].description,\n        iconId2: data_forecast.list[18].weather[0].id.toString(),\n        day3: data_forecast.list[26].dt_txt,\n        temperature3: data_forecast.list[26].main.temp,\n        humidity3: data_forecast.list[26].main.humidity,\n        description3: data_forecast.list[26].weather[0].description,\n        iconId3: data_forecast.list[26].weather[0].id.toString(),\n        day4: data_forecast.list[34].dt_txt,\n        temperature4: data_forecast.list[34].main.temp,\n        humidity4: data_forecast.list[34].main.humidity,\n        description4: data_forecast.list[34].weather[0].description,\n        iconId4: data_forecast.list[34].weather[0].id.toString(),\n        error: \"\"\n      });\n    } else {\n      this.setState({\n        temperature: undefined,\n        city: undefined,\n        country: undefined,\n        humidity: undefined,\n        description: undefined,\n        icon: undefined,\n        iconId: undefined,\n        day1: undefined,\n        temperature1: undefined,\n        humidity1: undefined,\n        description1: undefined,\n        iconId1: undefined,\n        day2: undefined,\n        temperature2: undefined,\n        humidity2: undefined,\n        description2: undefined,\n        iconId2: undefined,\n        day3: undefined,\n        temperature3: undefined,\n        humidity3: undefined,\n        description3: undefined,\n        iconId3: undefined,\n        day4: undefined,\n        temperature4: undefined,\n        humidity4: undefined,\n        description4: undefined,\n        iconId4: undefined,\n        error: \"Please enter a city\"\n    });\n  }\n}\n\n  render() {\n    return(\n      <Router>\n        <div>         \n          <Switch>\n            <Route exact path=\"/\" render={props => (<Weather\n            {...props}\n            getWeather={ this.getWeather } \n            temperature={ this.state.temperature }\n            city={ this.state.city }\n            country={ this.state.country }\n            humidity={ this.state.humidity }\n            description={ this.state.description }\n            icon={ this.state.icon }\n            iconId={this.state.iconId}\n            error={ this.state.error }\n            />)\n            }/>\n\n            <Route path=\"/forecast\" render={props => (<Forecast \n              {...props}\n              city={this.state.city}\n              country={this.state.country}\n              day1={this.state.day1}\n              temperature1={this.state.temperature1} \n              humidity1={this.state.humidity1} \n              description1={this.state.description1} \n              iconId1={this.state.iconId1}\n              day2={this.state.day2}\n              temperature2={this.state.temperature2} \n              humidity2={this.state.humidity2} \n              description2={this.state.description2} \n              iconId2={this.state.iconId2}\n              day3={this.state.day3}\n              temperature3={this.state.temperature3} \n              humidity3={this.state.humidity3} \n              description3={this.state.description3} \n              iconId3={this.state.iconId3}\n              day4={this.state.day4}\n              temperature4={this.state.temperature4} \n              humidity4={this.state.humidity4} \n              description4={this.state.description4} \n              iconId4={this.state.iconId4}/>)\n              }/>  \n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './App.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}